@using StockManagement.Domain.ViewModels.Responses
@using StockManagement.Domain.Core.Paging
@model PagedList<GetAllOrdersWithCustomerAndProductViewModel>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>

@await Html.PartialAsync("_SearchAndPageSize", Model)

<p>
	<a asp-action="Create">Create New</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				Id
			</th>
			<th>
				Pieces
			</th>
			<th>
				Price
			</th>
			<th>
				Product
			</th>
			<th>
				Customer
			</th>

			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Items)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Pieces)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Price)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Product)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Customer)
				</td>

				<td>
					<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
					<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@await Html.PartialAsync("_Pagination", Model)